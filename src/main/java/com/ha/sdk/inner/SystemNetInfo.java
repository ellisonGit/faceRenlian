package main.java.com.ha.sdk.inner;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * \u7eef\u8364\u7cba\u7f03\u6220\u7cb6\u6dc7\u2103\u4f05<br>
 * <i>native declaration : FaceRecoDef.h:133</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class SystemNetInfo extends Structure {
	/**
	 * \u7f03\u621d\u5d31\u9417\u2543\u608a\u9366\u677f\u6f43<br>
	 * C type : char[18]
	 */
	public byte[] mac_addr = new byte[18];
	/**
	 * \u9429\u544a\u6e80ip\u9366\u677f\u6f43<br>
	 * C type : char[16]
	 */
	public byte[] ip_addr = new byte[16];
	/**
	 * \u701b\u612e\u7d89\u93ba\u2543\u721c<br>
	 * C type : char[16]
	 */
	public byte[] netmask = new byte[16];
	/**
	 * \u699b\u6a3f\ue17b\u7f03\u621d\u53e7<br>
	 * C type : char[16]
	 */
	public byte[] gateway = new byte[16];
	/**
	 * \u6dc7\u6fc8\u6680<br>
	 * C type : char[14]
	 */
	public byte[] resv = new byte[14];
	public SystemNetInfo() {
		super();
	}
	protected List<String>getFieldOrder() {
		return Arrays.asList("mac_addr", "ip_addr", "netmask", "gateway", "resv");
	}
	/**
	 * @param mac_addr \u7f03\u621d\u5d31\u9417\u2543\u608a\u9366\u677f\u6f43<br>
	 * C type : char[18]<br>
	 * @param ip_addr \u9429\u544a\u6e80ip\u9366\u677f\u6f43<br>
	 * C type : char[16]<br>
	 * @param netmask \u701b\u612e\u7d89\u93ba\u2543\u721c<br>
	 * C type : char[16]<br>
	 * @param gateway \u699b\u6a3f\ue17b\u7f03\u621d\u53e7<br>
	 * C type : char[16]<br>
	 * @param resv \u6dc7\u6fc8\u6680<br>
	 * C type : char[14]
	 */
	public SystemNetInfo(byte mac_addr[], byte ip_addr[], byte netmask[], byte gateway[], byte resv[]) {
		super();
		if ((mac_addr.length != this.mac_addr.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.mac_addr = mac_addr;
		if ((ip_addr.length != this.ip_addr.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.ip_addr = ip_addr;
		if ((netmask.length != this.netmask.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.netmask = netmask;
		if ((gateway.length != this.gateway.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.gateway = gateway;
		if ((resv.length != this.resv.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.resv = resv;
	}
	public static class ByReference extends SystemNetInfo implements Structure.ByReference {
		
	};
	public static class ByValue extends SystemNetInfo implements Structure.ByValue {
		
	};
}

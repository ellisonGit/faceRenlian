package main.java.com.ha.sdk.inner;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : FaceRecoDef.h:190</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class DebugImage extends Structure {
	/** \u748b\u51ad\u762f\u9365\u60e7\u511a\u93cd\u714e\u7d21, 1:jpg */
	public int format;
	/** \u748b\u51ad\u762f\u9365\u60e7\u511a\u7039\u85c9\u5bb3 */
	public short width;
	/** \u748b\u51ad\u762f\u9365\u60e7\u511a\u6942\u6a3a\u5bb3 */
	public short height;
	/** \u9365\u60e7\u511a\u93c1\u7248\u5d41\u95c0\u57ae\u5bb3 */
	public int imageLen;
	/**
	 * \u9365\u60e7\u511a\u93c1\u7248\u5d41<br>
	 * C type : unsigned char*
	 */
	public Pointer imgData;
	public DebugImage() {
		super();
	}
	protected List<String>getFieldOrder() {
		return Arrays.asList("format", "width", "height", "imageLen", "imgData");
	}
	/**
	 * @param format \u748b\u51ad\u762f\u9365\u60e7\u511a\u93cd\u714e\u7d21, 1:jpg<br>
	 * @param width \u748b\u51ad\u762f\u9365\u60e7\u511a\u7039\u85c9\u5bb3<br>
	 * @param height \u748b\u51ad\u762f\u9365\u60e7\u511a\u6942\u6a3a\u5bb3<br>
	 * @param imageLen \u9365\u60e7\u511a\u93c1\u7248\u5d41\u95c0\u57ae\u5bb3<br>
	 * @param imgData \u9365\u60e7\u511a\u93c1\u7248\u5d41<br>
	 * C type : unsigned char*
	 */
	public DebugImage(int format, short width, short height, int imageLen, Pointer imgData) {
		super();
		this.format = format;
		this.width = width;
		this.height = height;
		this.imageLen = imageLen;
		this.imgData = imgData;
	}
	public static class ByReference extends DebugImage implements Structure.ByReference {
		
	};
	public static class ByValue extends DebugImage implements Structure.ByValue {
		
	};
}
